Phase: getConcepts
Input: SENTENCE1 Token SpaceToken FEATURE_SENTENCE
Options: control = appelt
 

Macro: Noun
(
   {Token.category==NN,Token within{FEATURE_SENTENCE}}|{Token.category==NNS,Token within{FEATURE_SENTENCE}}|
   {Token.category==NNP,Token within{FEATURE_SENTENCE}}|{Token.category==NNPS,Token within{FEATURE_SENTENCE}}
)


Macro: Verb
(
   {Token.category==VBN,Token within{FEATURE_SENTENCE}}|{Token.category==VBG,Token within{FEATURE_SENTENCE}}|
   {Token.category==VB,Token within{FEATURE_SENTENCE}}|{Token.category==VBZ,Token within{FEATURE_SENTENCE}}
)

Macro: NEWLINE
(
  {SpaceToken.string == "\n"} |
  {SpaceToken.string=="\n\r"} |
  ({SpaceToken.string=="\n"}{SpaceToken.string=="\r"}) |
  {SpaceToken.string=="\r\n"} |
  ({SpaceToken.string=="\r"}{SpaceToken.string=="\n"})
)

Macro: Adjective
(
   {Token.category==JJ,Token within{FEATURE_SENTENCE}}|{Token.category==JJS,Token within{FEATURE_SENTENCE}}|
   {Token.category==JJR,Token within{FEATURE_SENTENCE}}|{Token.category==RB,Token within{FEATURE_SENTENCE}}
)

Macro: imp
(
((Noun({SpaceToken})?)*
(Adjective({SpaceToken})?)*
(Verb({SpaceToken})?)*
({Token.string==","}({SpaceToken})?)*
({Token.category==IN,Token within{FEATURE_SENTENCE}}({SpaceToken})?)*
({Token.category==CC,Token within{FEATURE_SENTENCE}}({SpaceToken})?)*
({Token.category==DT,Token within{FEATURE_SENTENCE}}({SpaceToken})?)*
({Token.kind==number,Token within{FEATURE_SENTENCE}}({SpaceToken})?)*
)+
)

Rule: rule1
(
imp
(NEWLINE)[0]
):rule
-->
:rule.Concepts={rule="1",text=:rule.Token@string}

 Rule: rule1
(
(imp
NEWLINE
{Token.orth==lowercase}
({SpaceToken})?(imp({SpaceToken})?)*(NEWLINE)[0])+
):rule
-->
:rule.Concepts={rule="2",text=:rule.Token@string}
 